services:
  api:
    build:
      context: . #podaje się tylko jeśli build (nie image)
      dockerfile: ./Dockerfile
    container_name: pgt-api
    # mapowanie portów najlepiej trzymać jako string
    ports:
      - "8000:8000"
    # lepiej jako lista bo czytelniej i łatwiej później dodać drugi plik
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://127.0.0.1:8000/health || exit 1" ]
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 5s

  db:
    image: postgres:15
    container_name: pgt-db
    environment:
      # zmienne środowiskowe specyficzne dla postres:15
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    # test, który Docker uruchamia cyklicznie wewnątrz kontenera, aby ocenić, czy usługa działa poprawnie
    # w oficjalnym obrazie Postgresa odbala się przez shella, dlatego "CMD-SHELL"
    # pgisreaddy=postgres tool, sprwadza czy serwer akceptuje połączenie
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1" ]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

volumes:
  pgdata:
